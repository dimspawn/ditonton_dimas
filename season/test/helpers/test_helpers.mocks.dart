// Mocks generated by Mockito 5.0.16 from annotations
// in season/test/helpers/test_helpers.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:core/domain/entities/movie.dart' as _i6;
import 'package:core/domain/entities/movie_detail.dart' as _i7;
import 'package:core/domain/entities/season_detail.dart' as _i10;
import 'package:core/domain/entities/serie.dart' as _i8;
import 'package:core/domain/entities/serie_detail.dart' as _i9;
import 'package:core/domain/repositories/movie_repository.dart' as _i3;
import 'package:core/utils/failure.dart' as _i5;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:season/domain/usecases/get_season_detail.dart' as _i11;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeMovieRepository_1 extends _i1.Fake implements _i3.MovieRepository {}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i3.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Movie>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i6.Movie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Movie>>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i6.Movie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i6.Movie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i6.Movie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
          returnValue: Future<_i2.Either<_i5.Failure, _i7.MovieDetail>>.value(
              _FakeEither_0<_i5.Failure, _i7.MovieDetail>())) as _i4
          .Future<_i2.Either<_i5.Failure, _i7.MovieDetail>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Movie>>> getMovieRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i6.Movie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i6.Movie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i6.Movie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> saveWatchlist(
          _i7.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i5.Failure, String>>.value(
                  _FakeEither_0<_i5.Failure, String>()))
          as _i4.Future<_i2.Either<_i5.Failure, String>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> removeWathclist(
          _i7.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWathclist, [movie]),
              returnValue: Future<_i2.Either<_i5.Failure, String>>.value(
                  _FakeEither_0<_i5.Failure, String>()))
          as _i4.Future<_i2.Either<_i5.Failure, String>>);
  @override
  _i4.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.Serie>>> getWatchlistSeries() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistSeries, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i8.Serie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i8.Serie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i8.Serie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.Serie>>> getOnTheAirSeries() =>
      (super.noSuchMethod(Invocation.method(#getOnTheAirSeries, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i8.Serie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i8.Serie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i8.Serie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.Serie>>> getPopularSeries() =>
      (super.noSuchMethod(Invocation.method(#getPopularSeries, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i8.Serie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i8.Serie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i8.Serie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.Serie>>> getTopRatedSeries() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedSeries, []),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i8.Serie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i8.Serie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i8.Serie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i9.SeriesDetail>> getSeriesDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getSeriesDetail, [id]),
          returnValue: Future<_i2.Either<_i5.Failure, _i9.SeriesDetail>>.value(
              _FakeEither_0<_i5.Failure, _i9.SeriesDetail>())) as _i4
          .Future<_i2.Either<_i5.Failure, _i9.SeriesDetail>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.Serie>>> getSeriesRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getSeriesRecommendations, [id]),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i8.Serie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i8.Serie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i8.Serie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.Serie>>> searchSeries(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchSeries, [query]),
          returnValue: Future<_i2.Either<_i5.Failure, List<_i8.Serie>>>.value(
              _FakeEither_0<_i5.Failure, List<_i8.Serie>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<_i8.Serie>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> saveWatchlistSeries(
          _i9.SeriesDetail? series) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlistSeries, [series]),
              returnValue: Future<_i2.Either<_i5.Failure, String>>.value(
                  _FakeEither_0<_i5.Failure, String>()))
          as _i4.Future<_i2.Either<_i5.Failure, String>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> removeWathclistSeries(
          _i9.SeriesDetail? series) =>
      (super.noSuchMethod(Invocation.method(#removeWathclistSeries, [series]),
              returnValue: Future<_i2.Either<_i5.Failure, String>>.value(
                  _FakeEither_0<_i5.Failure, String>()))
          as _i4.Future<_i2.Either<_i5.Failure, String>>);
  @override
  _i4.Future<bool> isAddedToWatchlistSeries(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlistSeries, [id]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i10.SeasonDetail>> getSeasonDetail(
          int? id, int? seasonNumber) =>
      (super.noSuchMethod(
          Invocation.method(#getSeasonDetail, [id, seasonNumber]),
          returnValue: Future<_i2.Either<_i5.Failure, _i10.SeasonDetail>>.value(
              _FakeEither_0<_i5.Failure, _i10.SeasonDetail>())) as _i4
          .Future<_i2.Either<_i5.Failure, _i10.SeasonDetail>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [GetSeasonDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSeasonDetail extends _i1.Mock implements _i11.GetSeasonDetail {
  MockGetSeasonDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_1()) as _i3.MovieRepository);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i10.SeasonDetail>> execute(
          int? id, int? seasonNumber) =>
      (super.noSuchMethod(Invocation.method(#execute, [id, seasonNumber]),
          returnValue: Future<_i2.Either<_i5.Failure, _i10.SeasonDetail>>.value(
              _FakeEither_0<_i5.Failure, _i10.SeasonDetail>())) as _i4
          .Future<_i2.Either<_i5.Failure, _i10.SeasonDetail>>);
  @override
  String toString() => super.toString();
}
